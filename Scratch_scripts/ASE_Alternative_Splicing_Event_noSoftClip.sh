#!/bin/bash
if [ $# -le 1 ] 
then echo "
#########################################################################
#      USAGE: Analyze_Alternative_Splicing_Event.sh <GTF Input List> <Bam.list>
#
#      Description:
#      Apply BCummings pipeline and analyze the alternative splicing events
#
#      GTP_Input List is generated by GTF_to_Junction_Discovery.pl, format:
#           NF1	ENSG00000196712.12	-	chr17	29421945	29709134	protein_coding
#      Bam.list: each line is one bam file
#
#      Output: All.*.normalized.splicing.txt: include all potential result
#      Output: All.*.normalized.splicing.filter.txt: filter by ~/bin/FilterSpliceJunction.py, 
#      Criteria: n_read_support 10, n_sample_max: 5, filter_sample_with less then 2 reads. You can change this in this pipeline
#
#      Version note: 1.1, don't include soft clip result
#                  
#      Author: Wang Yu
#      Mail: yulywang@umich.edu
#      Created Time: Thu 14 Nov 2019 08:43:22 PM EST
#########################################################################
"
exit
fi
prefix=$1;
bam=$2
sh ~/bin/SpliceJunctionDiscovery_noSoftClip.sh $prefix $bam
# replace chr, add 12/09/2019
awk 'BEGIN{OFS="\t"}{if($1=="Gene"){print $0} else{gsub("chr","",$3);print $1,$2,$3,$4+1,$5+1,$6,$7,$8}}' All.$prefix\.splicing.txt > All.$prefix\.splicing.txt1
mv All.$prefix\.splicing.txt1 All.$prefix\.splicing.txt
python ~/bin/NormalizeSpliceJunctionValues.py -splice_file All.$prefix\.splicing.txt --normalize -transcript_model ~/bin/gencode.comprehensive.splice.junctions.txt  > All.$prefix\.normalized.splicing.txt
# Clean up the result
sed -i 's/\.rmdup\.bam//g' All.$prefix\.normalized.splicing.txt
python ~/bin/FilterSpliceJunctions.py -splice_file All.$prefix\.normalized.splicing.txt -n_read_support 10 -print_simple -include_normalized -n_samples 5 -filter_n_reads 2 > All.$prefix\.splicing.filter.txt
